{"version":3,"file":"component---src-templates-single-post-js-f9231bccda9d4c3c686f.js","mappings":"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","sources":["webpack://gatsby-blog/./helpers.js","webpack://gatsby-blog/./src/components/tags.js","webpack://gatsby-blog/./src/templates/single-post.js"],"sourcesContent":["function kebabCase(string) {\r\n  var result = string;\r\n\r\n  // Convert camelCase capitals to kebab-case.\r\n  result = result.replace(/([a-z][A-Z])/g, function (match) {\r\n    return match.substr(0, 1) + '-' + match.substr(1, 1).toLowerCase();\r\n  });\r\n\r\n  // Convert non-camelCase capitals to lowercase.\r\n  result = result.toLowerCase();\r\n\r\n  // Convert non-alphanumeric characters to hyphens\r\n  result = result.replace(/[^-a-z0-9]+/g, '-');\r\n\r\n  // Remove hyphens from both ends\r\n  result = result.replace(/^-+/, '').replace(/-+$/, '');\r\n\r\n  return result;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  kebabCase\r\n};","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { kebabCase } from '../../helpers';\r\nimport '../styles/components/tags.scss';\r\n\r\nfunction Tags ({ tags }) {\r\n  return (\r\n    <div className=\"tags\">\r\n      <h3 className=\"heading\">Categories:</h3>\r\n\r\n      <ul>\r\n        {tags.map(tag =>\r\n          <li key={kebabCase(tag)}>\r\n            <Link to={`/tags/${kebabCase(tag)}`} itemProp=\"url\">\r\n              <span itemProp=\"headline\">{tag}</span>\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Tags;","import React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\n\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Tags from '../components/tags';\r\nimport '../styles/templates/singlepost.scss';\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  const post = data.markdownRemark;\r\n  const otherPosts = data.morePosts.nodes;\r\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\r\n  const { previous, next, tags } = pageContext;\r\n  const date = post.frontmatter.date;\r\n  const update = post.frontmatter.update;\r\n\r\n  const Article = () => {\r\n    return (\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          {date && <small className=\"date\"><b>Posted on:</b> {date}</small>}\r\n          {update && <small className=\"date update\"><b>Updated on:</b> {update}</small>}\r\n        </header>\r\n\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n\r\n      </article>\r\n    );\r\n  }\r\n\r\n  const Footer = () => {\r\n    return (\r\n      <footer>\r\n        <Tags tags={tags} />\r\n\r\n        <div className=\"related-posts\">\r\n          <h3>Similar posts:</h3>\r\n          {otherPosts.length\r\n            ? otherPosts.map((post, i) =>\r\n              <Link key={i} to={post.fields.slug}>{post.frontmatter.title}</Link>)\r\n            : <p>No related posts</p>\r\n          }\r\n        </div>\r\n\r\n      </footer>\r\n    );\r\n  }\r\n\r\n  const PostNav = () => {\r\n    const PostLink = ({ link, linkText, rel }) => {\r\n      return (\r\n        link && (\r\n          <li>\r\n            <span>{linkText} </span>\r\n            <Link to={link.fields.slug} rel={rel} >\r\n              {link.frontmatter.title}\r\n            </Link>\r\n          </li>\r\n        )\r\n      );\r\n    }\r\n\r\n    return (\r\n      <nav className=\"blog-post-nav\">\r\n        <ul>\r\n          <PostLink link={previous} linkText=\"Previous post:\" rel=\"prev\" />\r\n          <PostLink link={next} linkText=\"Next post:\" rel=\"next\" />\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle} className=\"single-post\">\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <div className=\"post\">\r\n        <Article />\r\n        <hr />\r\n        <Footer />\r\n        <hr />\r\n        <PostNav />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\nquery BlogPostBySlug($slug: String!) {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n    }\r\n  }\r\n  markdownRemark(fields: {slug: {eq: $slug}}) {\r\n    id\r\n    excerpt(pruneLength: 160)\r\n    html\r\n    frontmatter {\r\n      title\r\n      date(formatString: \"MMMM DD, YYYY\")\r\n      update(formatString: \"MMMM DD, YYYY\")\r\n      description\r\n    }\r\n  }\r\n  morePosts: allMarkdownRemark(\r\n    filter: {fields: {slug: {ne: $slug}}}\r\n    limit: 5\r\n    sort: {frontmatter: {date: DESC}}\r\n  ) {\r\n    nodes {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n// Add:\r\n// $tag: [String] to BlogPostBySlug variables\r\n// frontmatter: { tags: { ne: \"Projects\", in: $tag } } to morePosts filter to remove projects from the listing"],"names":["module","exports","kebabCase","string","result","replace","match","substr","toLowerCase","_ref","tags","React","className","map","tag","key","Link","to","itemProp","_data$site$siteMetada","data","pageContext","location","post","markdownRemark","otherPosts","morePosts","nodes","siteTitle","site","siteMetadata","title","previous","next","date","frontmatter","update","Article","itemScope","itemType","dangerouslySetInnerHTML","__html","html","Footer","Tags","length","i","fields","slug","PostNav","PostLink","_ref2","link","linkText","rel","Layout","SEO","description","excerpt"],"sourceRoot":""}