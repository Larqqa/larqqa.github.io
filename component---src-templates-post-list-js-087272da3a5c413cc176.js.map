{"version":3,"file":"component---src-templates-post-list-js-087272da3a5c413cc176.js","mappings":"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","sources":["webpack://gatsby-blog/./helpers.js","webpack://gatsby-blog/./src/components/Pagination.js","webpack://gatsby-blog/./src/components/Posts.js","webpack://gatsby-blog/./src/components/tags.js","webpack://gatsby-blog/./src/templates/post-list.js"],"sourcesContent":["function kebabCase(string) {\r\n  var result = string;\r\n\r\n  // Convert camelCase capitals to kebab-case.\r\n  result = result.replace(/([a-z][A-Z])/g, function (match) {\r\n    return match.substr(0, 1) + '-' + match.substr(1, 1).toLowerCase();\r\n  });\r\n\r\n  // Convert non-camelCase capitals to lowercase.\r\n  result = result.toLowerCase();\r\n\r\n  // Convert non-alphanumeric characters to hyphens\r\n  result = result.replace(/[^-a-z0-9]+/g, '-');\r\n\r\n  // Remove hyphens from both ends\r\n  result = result.replace(/^-+/, '').replace(/-+$/, '');\r\n\r\n  return result;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  kebabCase\r\n};","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport '../styles/components/pagination.scss';\r\n\r\nfunction Pagination ({ isFirst, isLast, prevPage, nextPage, numPages, currentPage, link }) {\r\n  return (\r\n    <div className=\"pagination\">\r\n      {!isFirst && (\r\n        <Link className=\"previous\" to={prevPage} rel=\"prev\">\r\n          Previous\r\n        </Link>\r\n      )}\r\n\r\n      <div className=\"num-wrap\">\r\n        {currentPage > 2 &&\r\n          <Link to={`${link}`}>\r\n            1{currentPage > 3 && '..'}\r\n          </Link>}\r\n\r\n        {numPages > 1 && Array.from([ -1, 0, 1 ], i => {\r\n          if (currentPage + i < 1) {\r\n            return;\r\n          } else if (currentPage + i > numPages) {\r\n            return;\r\n          } else {\r\n            return(\r\n              <Link\r\n                className={i === 0 ? 'active' : ''}\r\n                key={`pagination-number${i + 1}`}\r\n                to={`${link}${currentPage + i === 1 ? '' : currentPage + i}`}\r\n              >\r\n                {currentPage + i}\r\n              </Link>\r\n            );\r\n          }\r\n        })}\r\n\r\n        {currentPage < numPages - 1 &&\r\n          <Link to={`${link}${numPages}`}>\r\n            {numPages - 1 != currentPage + 1 && '..'}{numPages}\r\n          </Link>}\r\n      </div>\r\n\r\n      {!isLast && (\r\n        <Link className=\"next\" to={nextPage} rel=\"next\">\r\n          Next\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Pagination;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nfunction Posts ({ postData }) {\r\n  return (\r\n    postData.map(post => {\r\n      const title = post.frontmatter.title || post.fields.slug;\r\n\r\n      return (\r\n        <article\r\n          key={post.fields.slug}\r\n          className=\"post-list-item\"\r\n          itemScope\r\n          itemType=\"http://schema.org/Article\"\r\n        >\r\n          <header>\r\n            <h2><Link to={post.fields.slug} itemProp=\"url\">{title}</Link></h2>\r\n            <small>{post.frontmatter.date}</small>\r\n          </header>\r\n\r\n          <section>\r\n            <p\r\n              dangerouslySetInnerHTML={{\r\n                __html: post.frontmatter.description || post.excerpt,\r\n              }}\r\n              itemProp=\"description\"\r\n            />\r\n          </section>\r\n\r\n        </article>\r\n      );\r\n    })\r\n  );\r\n}\r\nexport default Posts;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { kebabCase } from '../../helpers';\r\nimport '../styles/components/tags.scss';\r\n\r\nfunction Tags ({ tags }) {\r\n  return (\r\n    <div className=\"tags\">\r\n      <h3 className=\"heading\">Categories:</h3>\r\n\r\n      <ul>\r\n        {tags.map(tag =>\r\n          <li key={kebabCase(tag)}>\r\n            <Link to={`/tags/${kebabCase(tag)}`} itemProp=\"url\">\r\n              <span itemProp=\"headline\">{tag}</span>\r\n            </Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Tags;","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Posts from '../components/Posts';\r\nimport Tags from '../components/tags';\r\nimport Pagination from '../components/Pagination';\r\nimport '../styles/templates/postlist.scss';\r\n\r\nconst BlogList = ({ data, pageContext, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\r\n  const { currentPage, numPages } = pageContext;\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage = currentPage - 1 === 1 ? '/blog' : `/blog/${currentPage - 1}`;\r\n  const nextPage = `/blog/${currentPage + 1}`;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n  const tags = data.tags.group.map(tag => tag.fieldValue);\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle} className=\"post-list\">\r\n      <SEO title=\"Blog\" />\r\n      <h1>Posts</h1>\r\n      <Tags tags={tags} />\r\n      <Posts postData={posts} />\r\n      <Pagination\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n        numPages={numPages}\r\n        currentPage={currentPage}\r\n        link=\"/blog/\"\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogList;\r\n\r\nexport const pageQuery = graphql`\r\nquery blogPageQuery($skip: Int!, $limit: Int!) {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n    }\r\n  }\r\n  allMarkdownRemark(\r\n    filter: {isFuture: {eq: false}, frontmatter: {tags: {nin: [\"Projects\"]}}}\r\n    sort: {frontmatter: {date: DESC}}\r\n    limit: $limit\r\n    skip: $skip\r\n  ) {\r\n    nodes {\r\n      excerpt\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        description\r\n        tags\r\n      }\r\n    }\r\n  }\r\n  tags: allMarkdownRemark(filter: {isFuture: {eq: false}}, limit: 2000) {\r\n    group(field: {frontmatter: {tags: SELECT}}) {\r\n      fieldValue\r\n    }\r\n  }\r\n}\r\n`;"],"names":["module","exports","kebabCase","string","result","replace","match","substr","toLowerCase","_ref","isFirst","isLast","prevPage","nextPage","numPages","currentPage","link","React","className","Link","to","rel","Array","from","i","key","postData","map","post","title","frontmatter","fields","slug","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","tags","tag","_data$site$siteMetada","data","pageContext","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","group","fieldValue","Layout","SEO","Tags","Posts","Pagination"],"sourceRoot":""}