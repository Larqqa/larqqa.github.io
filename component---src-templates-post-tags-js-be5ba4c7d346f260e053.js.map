{"version":3,"file":"component---src-templates-post-tags-js-be5ba4c7d346f260e053.js","mappings":"uIAmDA,IA/CA,SAAmBA,GAAyE,IAAvE,QAAEC,EAAO,OAAEC,EAAM,SAAEC,EAAQ,SAAEC,EAAQ,SAAEC,EAAQ,YAAEC,EAAW,KAAEC,GAAMP,EACvF,OACEQ,EAAAA,cAAA,OAAKC,UAAU,eACXR,GACAO,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAU,WAAWE,GAAIR,EAAUS,IAAI,QAAO,YAKtDJ,EAAAA,cAAA,OAAKC,UAAU,YACZH,EAAc,GACbE,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAE,GAAKJ,GAAQ,IACjBD,EAAc,GAAK,MAGxBD,EAAW,GAAKQ,MAAMC,KAAK,EAAG,EAAG,EAAG,IAAKC,GACpCT,EAAcS,EAAI,GAEXT,EAAcS,EAAIV,OAD3B,EAKEG,EAAAA,cAACE,EAAAA,GAAI,CACHD,UAAiB,IAANM,EAAU,SAAW,GAChCC,IAAG,qBAAsBD,EAAI,GAC7BJ,GAAE,GAAKJ,GAAOD,EAAcS,IAAM,EAAI,GAAKT,EAAcS,IAExDT,EAAcS,KAMtBT,EAAcD,EAAW,GACxBG,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAE,GAAKJ,EAAOF,GACjBA,EAAW,GAAKC,EAAc,GAAK,KAAMD,KAI9CH,GACAM,EAAAA,cAACE,EAAAA,GAAI,CAACD,UAAU,OAAOE,GAAIP,EAAUQ,IAAI,QAAO,QAMxD,C,+CChBA,IA/BA,SAAcZ,GAAiB,IAAf,SAAEiB,GAAUjB,EAC1B,OACEiB,EAASC,KAAIC,IACX,MAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACEf,EAAAA,cAAA,WACEQ,IAAKG,EAAKG,OAAOC,KACjBd,UAAU,iBACVe,WAAS,EACTC,SAAS,6BAETjB,EAAAA,cAAA,cACEA,EAAAA,cAAA,UAAIA,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAIQ,EAAKG,OAAOC,KAAMG,SAAS,OAAON,IAChDZ,EAAAA,cAAA,aAAQW,EAAKE,YAAYM,OAG3BnB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEoB,wBAAyB,CACvBC,OAAQV,EAAKE,YAAYS,aAAeX,EAAKY,SAE/CL,SAAS,iBAIL,GAIlB,C,8FCIA,UA5BgB1B,IAAsC,IAADgC,EAAA,IAApC,KAAEC,EAAI,YAAEC,EAAW,SAAEC,GAAUnC,EAC9C,MAAMoC,GAAkC,QAAtBJ,EAAAC,EAAKI,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBZ,QAAS,SAC7C,YAAEd,EAAW,SAAED,EAAQ,IAAEkC,GAAQL,EACjCjC,EAA0B,IAAhBK,EACVJ,EAASI,IAAgBD,EACzBF,EAAWG,EAAc,GAAM,EAAC,SAAYiC,EAAIC,cAAa,SAAcD,EAAIC,cAAa,KAAIlC,EAAc,GAC9GF,EAAQ,SAAYmC,EAAIC,cAAa,KAAIlC,EAAc,GACvDmC,EAAQR,EAAKS,kBAAkBC,MAErC,OACEnC,EAAAA,cAACoC,EAAAA,EAAM,CAACT,SAAUA,EAAUf,MAAOgB,EAAW3B,UAAS,aAAe8B,EAAIC,eACxEhC,EAAAA,cAACqC,EAAAA,EAAG,CAACzB,MAAOmB,IACZ/B,EAAAA,cAAA,UAAK+B,GACL/B,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAG,QAAQe,SAAS,OAAM,qBAChClB,EAAAA,cAACsC,EAAAA,EAAK,CAAC7B,SAAUwB,IACjBjC,EAAAA,cAACuC,EAAAA,EAAU,CACT9C,QAASA,EACTC,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,KAAI,SAAWgC,EAAIC,cAAa,MAE3B,C","sources":["webpack://gatsby-blog/./src/components/Pagination.js","webpack://gatsby-blog/./src/components/Posts.js","webpack://gatsby-blog/./src/templates/post-tags.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport '../styles/components/pagination.scss';\r\n\r\nfunction Pagination ({ isFirst, isLast, prevPage, nextPage, numPages, currentPage, link }) {\r\n  return (\r\n    <div className=\"pagination\">\r\n      {!isFirst && (\r\n        <Link className=\"previous\" to={prevPage} rel=\"prev\">\r\n          Previous\r\n        </Link>\r\n      )}\r\n\r\n      <div className=\"num-wrap\">\r\n        {currentPage > 2 &&\r\n          <Link to={`${link}`}>\r\n            1{currentPage > 3 && '..'}\r\n          </Link>}\r\n\r\n        {numPages > 1 && Array.from([ -1, 0, 1 ], i => {\r\n          if (currentPage + i < 1) {\r\n            return;\r\n          } else if (currentPage + i > numPages) {\r\n            return;\r\n          } else {\r\n            return(\r\n              <Link\r\n                className={i === 0 ? 'active' : ''}\r\n                key={`pagination-number${i + 1}`}\r\n                to={`${link}${currentPage + i === 1 ? '' : currentPage + i}`}\r\n              >\r\n                {currentPage + i}\r\n              </Link>\r\n            );\r\n          }\r\n        })}\r\n\r\n        {currentPage < numPages - 1 &&\r\n          <Link to={`${link}${numPages}`}>\r\n            {numPages - 1 != currentPage + 1 && '..'}{numPages}\r\n          </Link>}\r\n      </div>\r\n\r\n      {!isLast && (\r\n        <Link className=\"next\" to={nextPage} rel=\"next\">\r\n          Next\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Pagination;","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nfunction Posts ({ postData }) {\r\n  return (\r\n    postData.map(post => {\r\n      const title = post.frontmatter.title || post.fields.slug;\r\n\r\n      return (\r\n        <article\r\n          key={post.fields.slug}\r\n          className=\"post-list-item\"\r\n          itemScope\r\n          itemType=\"http://schema.org/Article\"\r\n        >\r\n          <header>\r\n            <h2><Link to={post.fields.slug} itemProp=\"url\">{title}</Link></h2>\r\n            <small>{post.frontmatter.date}</small>\r\n          </header>\r\n\r\n          <section>\r\n            <p\r\n              dangerouslySetInnerHTML={{\r\n                __html: post.frontmatter.description || post.excerpt,\r\n              }}\r\n              itemProp=\"description\"\r\n            />\r\n          </section>\r\n\r\n        </article>\r\n      );\r\n    })\r\n  );\r\n}\r\nexport default Posts;","import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Posts from '../components/Posts';\r\nimport Pagination from '../components/Pagination';\r\nimport '../styles/templates/taglist.scss';\r\nimport '../styles/templates/postlist.scss';\r\n\r\nconst TagList = ({ data, pageContext, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || 'Title';\r\n  const { currentPage, numPages, tag } = pageContext;\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const prevPage = currentPage - 1 === 1 ? `/tags/${tag.toLowerCase()}` : `/tags/${tag.toLowerCase()}/${currentPage - 1}`;\r\n  const nextPage = `/tags/${tag.toLowerCase()}/${currentPage + 1}`;\r\n  const posts = data.allMarkdownRemark.nodes;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle} className={`post-list ${tag.toLowerCase()}`}>\r\n      <SEO title={tag} />\r\n      <h1>{tag}</h1>\r\n      <Link to=\"/blog\" itemProp=\"url\">Back to all posts</Link>\r\n      <Posts postData={posts} />\r\n      <Pagination\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n        numPages={numPages}\r\n        currentPage={currentPage}\r\n        link={`/tags/${tag.toLowerCase()}/`}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default TagList;\r\n\r\nexport const pageQuery = graphql`\r\nquery tagPageQuery($skip: Int!, $limit: Int!, $tag: String!) {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n    }\r\n  }\r\n  allMarkdownRemark(\r\n    filter: {isFuture: {eq: false}, frontmatter: {tags: {in: [$tag]}}}\r\n    sort: {frontmatter: {date: DESC}}\r\n    limit: $limit\r\n    skip: $skip\r\n  ) {\r\n    nodes {\r\n      excerpt\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n}\r\n`;"],"names":["_ref","isFirst","isLast","prevPage","nextPage","numPages","currentPage","link","React","className","Link","to","rel","Array","from","i","key","postData","map","post","title","frontmatter","fields","slug","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","_data$site$siteMetada","data","pageContext","location","siteTitle","site","siteMetadata","tag","toLowerCase","posts","allMarkdownRemark","nodes","Layout","SEO","Posts","Pagination"],"sourceRoot":""}